version: '3.8'

services:
  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "3000:3000"
    # depends_on:
    #   - mongo
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:3000"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    networks:
      - app-network

  order-service:
    build: ./order-service
    container_name: order-service
    ports:
      - "3002:3002"
    # depends_on:
    #   - user-service
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:5000"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    networks:
      - app-network

  product-service:
    build: ./product-service
    container_name: product-service
    ports:
      - "3001:3001"
    # depends_on:
    #   - order-service
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8080"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    networks:
      - app-network


  gateway-service:
    build: ./gateway-service
    container_name: gateway-service
    ports:
      - "3003:3003"
    # depends_on:
    #   - order-service
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8080"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    networks:
      - app-network

 # mongo:
  #   image: mongo:6
  #   container_name: mongo
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongo-data:/data/db
  #   healthcheck:
  #     test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
  #     interval: 20s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     - app-network

# volumes:
#   mongo-data:

networks:
  app-network:
    driver: bridge
 